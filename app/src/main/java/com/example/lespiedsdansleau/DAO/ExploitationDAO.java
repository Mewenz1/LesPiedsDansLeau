package com.example.lespiedsdansleau.DAO;

import android.content.ContentValues;
        import android.content.Context;
        import android.database.Cursor;
        import android.database.sqlite.SQLiteDatabase;
        import android.util.Log;


import com.example.lespiedsdansleau.Metier.Exploitation;

import java.text.ParseException;
        import java.text.SimpleDateFormat;
        import java.util.ArrayList;
        import java.util.Date;
        import java.util.List;

public class ExploitationDAO extends DAO<Exploitation>{

    private SQLiteLesPiedsDansLeau dbPDLExploitation;
    private SQLiteDatabase db;

    //déclaration des outils nécessaire à la base
    private static final String TABLE_EXPLOITATION = "EXPLOITATION";
    private static final String COL_IDEXPLOITATION = "idEx";
    private static final String COL_NOMEXPLOITATION = "nomEx";
    private static final String COL_DESCEXPLOITATION = "descEx";
    private static final String COL_TYPEEXPLOITATION = "typeEx";


    public ExploitationDAO(Context context) {
        dbPDLExploitation = new SQLiteLesPiedsDansLeau(context);
    }

    public void open() {
        db = dbPDLExploitation.getWritableDatabase();
    }

    public void close() {
        db.close();
    }

    @Override
    public void insert(Exploitation obj) {
        ContentValues valeur = new ContentValues();
        valeur.put(COL_IDEXPLOITATION, obj.getIdEx());
        valeur.put(COL_NOMEXPLOITATION, obj.getNomEx());
        valeur.put(COL_DESCEXPLOITATION, obj.getDescEx());
        valeur.put(COL_TYPEEXPLOITATION, obj.getTypeEx());

        db.insert(TABLE_EXPLOITATION, null, valeur);
    }

    @Override
    public void update(Exploitation obj) {
        ContentValues valeur = new ContentValues();
        valeur.put(COL_IDEXPLOITATION, obj.getIdEx());
        valeur.put(COL_NOMEXPLOITATION, obj.getNomEx());
        valeur.put(COL_DESCEXPLOITATION, obj.getDescEx());
        valeur.put(COL_TYPEEXPLOITATION, obj.getTypeEx());


        Log.d("idExqDAO", String.valueOf(obj.getIdEx()));
        Log.d("nomExDAO", String.valueOf(obj.getNomEx()));

        db.update(TABLE_EXPLOITATION, valeur, COL_IDEXPLOITATION + "=" +obj.getIdEx(), null);
        Log.d("nomExDAO", String.valueOf(obj.getNomEx()));
    }

    @Override
    public void delete(Exploitation obj) {
        db.delete(TABLE_EXPLOITATION, COL_IDEXPLOITATION + "=" + obj.getIdEx(), null);
        Log.d("DeleteId",String.valueOf(obj.getIdEx()));
    }

    public Exploitation readPosition(int position) {
        Exploitation uneEx;
        int id;
        String nom;
        String desc;
        String type;

        Cursor curseur = db.query(TABLE_EXPLOITATION, null, null, null, null, null, null);

        curseur.moveToFirst();
        curseur.moveToPosition(position);
        id = curseur.getInt(0);
        nom = curseur.getString(1);
        desc = curseur.getString(2);
        type = curseur.getString(3);


        uneEx = new Exploitation(id, nom, desc, type);
        return uneEx;
    }

    public List<Exploitation> read(){
        List<Exploitation> lesExploitations = new ArrayList<>();
        int id;
        String nom;
        String desc;
        String type;

        Cursor curseur = db.query(TABLE_EXPLOITATION, null, null, null, null, null, null);
        curseur.moveToFirst();
        for (int i = 0; i < curseur.getCount(); i++){
            id = curseur.getInt(0);
            nom = curseur.getString(1);
            desc = curseur.getString(2);
            type = curseur.getString(3);


            Exploitation uneEx = new Exploitation(id, nom, desc, type);
            lesExploitations.add(uneEx);
            curseur.moveToNext();
        }

        curseur.close();
        close();
        return lesExploitations;
    }
}
